name: Build

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - '**/*.md'
      - '.github/README.md'
  pull_request:
    branches: [ main, master ]
    paths-ignore:
      - '**/*.md'
      - '.github/README.md'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build Debug APK
        run: ./gradlew assembleDebug
      
      - name: Setup Repository Structure
        run: |
          mkdir -p build/repos
          mkdir -p build/repos/plugins
          # Create json file
          echo '{
            "name": "Phisher Extension Repository",
            "description": "Phisher Extension Repository for Cloudstream",
            "manifestVersion": 1,
            "pluginLists": [
              "https://raw.githubusercontent.com/${{ github.repository }}/builds/plugins.json"
            ]
          }' > build/repos/repository.json
          
          # Create plugins.json
          echo '[]' > build/repos/plugins.json
      
      - name: Copy and Process APKs
        run: |
          # Find all APK files
          find . -name "*.apk" -type f | while read apk; do
            filename=$(basename "$apk")
            # Copy APK to plugins directory
            cp "$apk" "build/repos/plugins/$filename"
            
            # Extract version from APK
            version=$(./gradlew -q printVersionName)
            version=${version:-"1.0.0"}
            
            # Add plugin to plugins.json
            tmpjson=$(mktemp)
            jq --arg name "${filename%.*}" \
               --arg fileName "$filename" \
               --arg version "$version" \
               --arg url "https://raw.githubusercontent.com/${{ github.repository }}/builds/plugins/$filename" \
            '[.[] + {
              "name": $name,
              "fileName": $fileName,
              "version": $version,
              "url": $url,
              "apiVersion": "1.0.0",
              "language": "ar",
              "authors": ["phisher"],
              "status": 1,
              "description": "Cloudstream Extension"
            }]' build/repos/plugins.json > "$tmpjson"
            mv "$tmpjson" build/repos/plugins.json
          done
      
      - name: Create Archive
        run: |
          cd build/repos
          zip -r ../repos.zip .
      
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: repositories
          path: build/repos.zip
          retention-days: 90

      - name: Deploy to Builds Branch
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd build/repos
          git init
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global init.defaultBranch builds
          git checkout --orphan builds
          git add -A
          git commit -m "Build from commit: ${{ github.sha }}"
          git push -f "https://${{ github.actor }}:${GITHUB_TOKEN}@github.com/${{ github.repository }}" builds
